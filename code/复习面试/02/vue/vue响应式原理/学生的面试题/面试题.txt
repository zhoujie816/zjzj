# CSS部分

1. 选择器有哪些？权重是怎么样的一个关系？有没有比id选择器权重更高的？
	这么简单的问题？
	基本选择器：id，class，标签，属性选择器，*
	关系选择器：子选择器，后代选择器，交集选择器，并集选择器
	权重就是优先级：大体是: 行间>id>class==属性>标签>*>浏览器默认样式>继承样式
	最高的是 !important	

2. 简单讲述一下盒子模型
	width,height,border,padding,margin
	盒子所占的页面面积:width+pading+border+margin
	盒子的大小:width+pading+border

3. 双飞翼布局是什么样子的？如何实现？你有多少种办法可以实现？
	翻翻飘爷的案例吧.找不到百度。无非就是让中间的先加载。两边通过样式放好。	

4. 定位有哪些？
	固定，绝对，相对，静态（标准文档流）
	相对定位没有脱离文档流。固定和绝对脱离文档流。

5. button上下不居中，可能出现了什么问题，你该怎么解决？
	设置了文字的line-height	

6. less语言预处理器有什么优点？
	好写咯。不用写太多复杂的选择器。


# javaScript部分

1. 你怎么理解闭包？在实际工作中有哪些地方会使用到闭包？
	闭包就是在一个不被销毁的作用域内存储一个局部变量，该变量只能通过子函数访问。
	这样做变量可以同时拥有全局变量可以一直访问的特性和局部变量不会被任意访问的安全特性。
	也可以这样理解：
		对象的属性必须通过对象来访问。
		闭包变量就是某个作用域的私有属性。
		如果你把作用域想象成一个对象，则这个闭包变量就是这个对象的私有属性。不过只能通过子函数来访问这个属性罢了。
	什么时候使用？
		需要缓存局部变量时都可以使用。
		举例？可以把我刚发的那个发布订阅者模式里面的Dep说一下呀！还能引导面试官问你这些问题装装逼。	

2. Promise是什么？
	Promise就是一种异步处理方案。
	或者说Promise提供了一种异步操作的封装api
	最明显的作用就是所有异步监听都可以用then来回调。
	还可以通过链式调用then来解决回调地狱的问题。
	当然细说Promise的话还得分析他的3中状态。
	pending/reslove/reject 

3. 数组常用的方法有哪些？都是一些什么作用？
	遍历：forEach，map，every，some，filter，reduce。
	操作：push，pop，shift，unshift，splice，sort，revese（这些方法会修改数组本身）
	截取：slice
	拼接：concat
	转字符串：join
	
	数组缓存方法（即创建一个新数组，数组的元素拷贝旧数组）
		1：let arrCopy = [...arr] (这个很low)
		2:  let arrCopy = arr.concat([])
		3:  let arrCopy = arr.slice() (最优)
		4:  map,filter都可以其实.只要返回一个新数组的方法都可以.

4. 原型链
	看看继承吧.
	js是怎么做继承的?
	两方面回答,如何继承父类的属性,如何继承父类的方法.
	继承属性:子类内调用父类钩子函数，并且通过call来改变this指向子类实例
	继承方法:让子类原型等于父类实例.(有瑕疵)
	
	以上两个做法合称'组合继承'
	请自行百度'寄生继承',目的就是解决继承方法的那个瑕疵.	

5. 有哪些排序方式？是如何实现的？
	这是在问冒泡排序那些算法吗?
	https://www.cnblogs.com/onepixel/articles/7674659.html	

6. ajax请求时同步还是异步的？如何修改为同步的？
	默认是异步.
	open的第三个参数改为false就是同步	

7. 如何判断数据类型？有哪些基本数据类型？
	最准确的数据类型判断:
	Object.prototype.toString.call(某个数据) === '[object 某个类型]'
	
	基本数据类型:
		number,string,boolean,undefined,null,symbol
	数据类型:
		number,string,boolean,undefined,null,symbol.object
	
	很难记吗?为什么很多同学觉得NaN是一个数据类型？看口诀，这跟你的成长阶段是一样的：
		
		3岁会数数（number），5岁会写字（string），8岁懂道理（boolean真假），13岁叛逆期觉得自己是独一无二的（symbol）
		18岁找对象（object），找到40岁还没有（undefined），80岁郁郁而终挂了（null）
		

# ES6部分

1. 常用的ES6新特性有哪些？
	Promise，解构赋值，let，const，class，箭头函数 sync await 等等等，Set，Map




# vue部分

1. v-model是如何实现的？双向绑定的原理？
	看群文件
2. vue是如何做到响应式的？
	看群文件	

3. vue的生命周期钩子函数有哪些？在哪里请求数据？与DOM操作相关的是在哪个周期函数中？
	在mounted中请求数据 
	在mounted或者updated中操作DOM	

4. 路由跳转的权限如何实现？
	meta中配置权限标识，在beforeEach中进行权限判断页面跳转。
	如果是后台返回权限字段，也是需要在beforeEach进行判断。

5. vue中如何优化性能？
	https://blog.csdn.net/qappleh/article/details/84783271

6. Vuex中有哪些方法？都有一些什么作用？我能不能直接修改state中的数据？为什么？
	Vuex的方法看Vuex官网Api
	为什么不能直接修改state。这里涉及到异步问题。
	如果先异步直接修改state。
	然后马上直接同步修改state。
	如果这时候异步还没完成，则可能出现意料之外的结果。（当然不是报错，只是效果可能不是你想要的）	
	所以必须在mutations中修改，mutations中不能有异步。mutations限制修改state必须同步。
	这样做先异步修改再同步修改就不会出现顺序乱的问题。
	
7. v-if和v-show有什么区别？
	v-if为false就不挂载当前DOM节点
	v-show只是通过css来控制元素显示和隐藏而已。	

8. 组件中数据传递的方式有哪些？如何实现的？
	props传递数据。
	如何实现？这又是源码问题。
	很复杂，可以百度initProps
	不会讲原理就讲用法。
	props是自上而下传递的单项数据流。子组件中的props是只读的。	它的更新只能通过更新父组件数据实现。

9. 路由如何传参？
	通过params或者query



# React部分

1. react有什么优点？
	更接近原生，可控性更好。
2. 简单讲一下JSX
	JSX就是为了快速书写视图模板，不过必须搭配相应babel插件来把模板编译成render函数。	

3. redux的作用是什么？如何修改其中的数据？怎么实现？
	redux就是第三方状态管理工具。
	通过dispatch修改。
	看我以前代码吧	

4. 什么是高阶组件？高阶组件导入和导出是什么？
	高阶组件就是组件的二次封装，导入旧组件，导出封装后的组件。




# 其他部分

1. 做一个抽奖九宫格，随机开始
2. 页面中有若干个图片，如何获取图片的数量
3. 页面中有若干个大图和小图，如何预览大图